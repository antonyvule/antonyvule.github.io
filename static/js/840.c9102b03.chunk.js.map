{"version":3,"file":"static/js/840.c9102b03.chunk.js","mappings":"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","sources":["components/sections/Contact.tsx"],"sourcesContent":["import React, { useState, ComponentType, useMemo, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { FaEnvelope, FaLinkedin, FaGithub, FaPaperPlane, FaMapMarkerAlt } from 'react-icons/fa';\nimport ParticleBackground from '../ui/ParticleBackground';\n\n// Helper function to cast the react-icons to ComponentType\nconst castIconToComponent = (icon: any): ComponentType<{}> => icon as ComponentType<{}>;\n\nconst Contact: React.FC = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [formError, setFormError] = useState('');\n  \n  // Optimize form change handler with useCallback\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormState(prev => ({ ...prev, [name]: value }));\n  }, []);\n  \n  // Email regex pattern - memoized\n  const emailRegex = useMemo(() => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, []);\n  \n  // Optimize form submission with useCallback\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Form validation\n    if (!formState.name || !formState.email || !formState.message) {\n      setFormError('Please fill out all required fields.');\n      return;\n    }\n    \n    // Email validation\n    if (!emailRegex.test(formState.email)) {\n      setFormError('Please enter a valid email address.');\n      return;\n    }\n    \n    setFormError('');\n    setIsSubmitting(true);\n    \n    // Simulate form submission\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      setIsSubmitting(false);\n      setIsSubmitted(true);\n      \n      // Reset form after submission\n      setFormState({\n        name: '',\n        email: '',\n        subject: '',\n        message: '',\n      });\n      \n      // Reset success message after 5 seconds\n      setTimeout(() => {\n        setIsSubmitted(false);\n      }, 5000);\n    } catch (error) {\n      setIsSubmitting(false);\n      setFormError('Something went wrong. Please try again later.');\n    }\n  }, [formState, emailRegex, setFormError, setIsSubmitting, setIsSubmitted, setFormState]);\n  \n  // Memoize animation variants to prevent recreation on every render\n  const containerVariants = useMemo(() => ({\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2,\n      },\n    },\n  }), []);\n  \n  const itemVariants = useMemo(() => ({\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.5 }\n    },\n  }), []);\n\n  // Memoize static data arrays\n  const contactMethods = useMemo(() => [\n    { \n      icon: castIconToComponent(FaEnvelope),\n      iconClass: \"text-2xl\",\n      title: 'Email',\n      value: 'antonyvule@gmail.com',\n      link: 'mailto:antonyvule@gmail.com',\n    },\n    { \n      icon: castIconToComponent(FaMapMarkerAlt),\n      iconClass: \"text-2xl\",\n      title: 'Location',\n      value: 'Brisbane, Australia',\n      link: null,\n    },\n  ], []);\n\n  const socialLinks = useMemo(() => [\n    { icon: castIconToComponent(FaLinkedin), link: 'https://linkedin.com/in/antonyvule', label: 'LinkedIn' },\n    { icon: castIconToComponent(FaGithub), link: 'https://github.com/antonyvule', label: 'GitHub' },\n  ], []);\n\n  return (\n    <section id=\"contact\" className=\"py-20 bg-gray-50 relative overflow-hidden\">\n      {/* Subtle interactive background */}\n      <ParticleBackground particleCount={25} mouseInteraction={true} className=\"opacity-20\" />\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <motion.div \n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"section-title text-dark\">Get In Touch</h2>\n          <div className=\"w-24 h-1 bg-primary mx-auto my-4\"></div>\n          <p className=\"section-subtitle max-w-3xl mx-auto\">\n            Have a project in mind or want to discuss potential opportunities? Let's connect!\n          </p>\n        </motion.div>\n\n        <div className=\"max-w-6xl mx-auto grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          {/* Contact Info & Social Links */}\n          <motion.div\n            variants={containerVariants}\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true }}\n          >\n            <motion.h3 \n              className=\"text-2xl font-bold mb-6\"\n              variants={itemVariants}\n            >\n              Contact Information\n            </motion.h3>\n            \n            {/* Contact methods */}\n            <motion.div \n              className=\"space-y-6 mb-12\"\n              variants={containerVariants}\n            >\n              {contactMethods.map((method, index) => (\n                <motion.div \n                  key={index} \n                  className=\"flex items-start\"\n                  variants={itemVariants}\n                  whileHover={{ x: 5 }}\n                  transition={{ type: \"spring\", stiffness: 400 }}\n                >\n                  <div className=\"flex-shrink-0 w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center text-primary mr-4\">\n                    <span className={method.iconClass}>{React.createElement(method.icon)}</span>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-lg\">{method.title}</h4>\n                    {method.link ? (\n                      <a \n                        href={method.link} \n                        className=\"text-gray-600 hover:text-primary transition-colors\"\n                      >\n                        {method.value}\n                      </a>\n                    ) : (\n                      <p className=\"text-gray-600\">{method.value}</p>\n                    )}\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n            \n            {/* Social links */}\n            <motion.div variants={itemVariants}>\n              <h3 className=\"text-2xl font-bold mb-6\">Connect With Me</h3>\n              <div className=\"flex gap-4\">\n                {socialLinks.map((social, index) => (\n                  <motion.a\n                    key={index}\n                    href={social.link}\n                    aria-label={social.label}\n                    className=\"w-12 h-12 rounded-full bg-white shadow-md flex items-center justify-center text-primary hover:bg-primary hover:text-white transition-all duration-300\"\n                    whileHover={{ \n                      scale: 1.1,\n                      rotate: 5,\n                      boxShadow: \"0 10px 25px -5px rgba(0, 0, 0, 0.1)\"\n                    }}\n                    whileTap={{ scale: 0.9 }}\n                  >\n                    {React.createElement(social.icon)}\n                  </motion.a>\n                ))}\n              </div>\n            </motion.div>\n            \n            {/* Animated decoration */}\n            <div className=\"mt-12 relative\">\n              <motion.div\n                className=\"w-64 h-64 rounded-full bg-gradient-to-r from-primary/5 to-secondary/5 absolute -z-10\"\n                animate={{ \n                  scale: [1, 1.1, 1],\n                  x: [0, 10, 0],\n                  y: [0, -10, 0],\n                }}\n                transition={{ \n                  duration: 8,\n                  repeat: Infinity,\n                  repeatType: \"reverse\"\n                }}\n                style={{ top: '-2rem', left: '-2rem' }}\n              />\n            </div>\n          </motion.div>\n          \n          {/* Contact Form */}\n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6, delay: 0.3 }}\n          >\n            <div className=\"bg-white rounded-xl shadow-xl p-8 relative overflow-hidden\">\n              {/* Background decoration */}\n              <div className=\"absolute top-0 right-0 w-32 h-32 bg-primary/5 rounded-full -translate-y-1/2 translate-x-1/2 z-0\"></div>\n              <div className=\"absolute bottom-0 left-0 w-24 h-24 bg-secondary/5 rounded-full translate-y-1/2 -translate-x-1/2 z-0\"></div>\n              \n              <motion.h3 \n                className=\"text-2xl font-bold mb-6 relative z-10\"\n                initial={{ opacity: 0, y: -20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n              >\n                Send a Message\n              </motion.h3>\n              \n              {isSubmitted ? (\n                <motion.div \n                  className=\"text-center py-16\"\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ \n                    type: \"spring\",\n                    stiffness: 200,\n                    damping: 20\n                  }}\n                >\n                  <div className=\"w-16 h-16 rounded-full bg-green-100 flex items-center justify-center mx-auto mb-4\">\n                    <span className=\"text-green-600 text-2xl\">{React.createElement(castIconToComponent(FaPaperPlane))}</span>\n                  </div>\n                  <h4 className=\"text-xl font-bold text-green-600 mb-2\">Message Sent!</h4>\n                  <p className=\"text-gray-600\">Thank you for reaching out. I'll get back to you shortly.</p>\n                </motion.div>\n              ) : (\n                <motion.form \n                  onSubmit={handleSubmit}\n                  className=\"space-y-5 relative z-10\"\n                  variants={containerVariants}\n                  initial=\"hidden\"\n                  whileInView=\"visible\"\n                  viewport={{ once: true }}\n                >\n                  {formError && (\n                    <motion.div \n                      className=\"bg-red-50 border border-red-200 text-red-600 rounded-md p-3 text-sm\"\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                    >\n                      {formError}\n                    </motion.div>\n                  )}\n                  \n                  <motion.div variants={itemVariants}>\n                    <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Name *\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      value={formState.name}\n                      onChange={handleChange}\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary focus:border-primary transition-colors\"\n                      required\n                    />\n                  </motion.div>\n                  \n                  <motion.div variants={itemVariants}>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Email *\n                    </label>\n                    <input\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      value={formState.email}\n                      onChange={handleChange}\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary focus:border-primary transition-colors\"\n                      required\n                    />\n                  </motion.div>\n                  \n                  <motion.div variants={itemVariants}>\n                    <label htmlFor=\"subject\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Subject\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"subject\"\n                      name=\"subject\"\n                      value={formState.subject}\n                      onChange={handleChange}\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary focus:border-primary transition-colors\"\n                    />\n                  </motion.div>\n                  \n                  <motion.div variants={itemVariants}>\n                    <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Message *\n                    </label>\n                    <textarea\n                      id=\"message\"\n                      name=\"message\"\n                      rows={5}\n                      value={formState.message}\n                      onChange={handleChange}\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary focus:border-primary transition-colors\"\n                      required\n                    />\n                  </motion.div>\n                  \n                  <motion.div variants={itemVariants}>\n                    <motion.button\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                      className={`w-full bg-primary text-white py-3 px-6 rounded-md font-medium transition-all duration-300 ${isSubmitting ? 'opacity-70 cursor-not-allowed' : 'hover:bg-primary-dark hover:shadow-lg'}`}\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                    >\n                      {isSubmitting ? (\n                        <span className=\"flex items-center justify-center\">\n                          <motion.span \n                            className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full inline-block mr-2\"\n                            animate={{ rotate: 360 }}\n                            transition={{ \n                              duration: 1, \n                              ease: \"linear\", \n                              repeat: Infinity \n                            }}\n                          />\n                          Sending...\n                        </span>\n                      ) : (\n                        <span className=\"flex items-center justify-center\">\n                          Send Message\n                          <span className=\"ml-2\">{React.createElement(castIconToComponent(FaPaperPlane))}</span>\n                        </span>\n                      )}\n                    </motion.button>\n                  </motion.div>\n                </motion.form>\n              )}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n"],"names":["Contact","formState","setFormState","useState","name","email","subject","message","isSubmitting","setIsSubmitting","isSubmitted","setIsSubmitted","formError","setFormError","handleChange","useCallback","e","value","target","prev","emailRegex","useMemo","handleSubmit","async","preventDefault","test","Promise","resolve","setTimeout","error","containerVariants","hidden","opacity","visible","transition","staggerChildren","itemVariants","y","duration","contactMethods","icon","FaEnvelope","iconClass","title","link","FaMapMarkerAlt","socialLinks","FaLinkedin","label","FaGithub","_jsxs","id","className","children","_jsx","ParticleBackground","particleCount","mouseInteraction","motion","div","initial","whileInView","viewport","once","variants","h3","map","method","index","whileHover","x","type","stiffness","React","href","social","a","scale","rotate","boxShadow","whileTap","animate","repeat","Infinity","repeatType","style","top","left","delay","damping","FaPaperPlane","form","onSubmit","exit","htmlFor","onChange","required","rows","button","disabled","span","ease"],"sourceRoot":""}