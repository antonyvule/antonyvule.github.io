{"version":3,"file":"static/js/91.8a9246c6.chunk.js","mappings":"2KAKA,MA2HA,EAjHiCA,KAE/B,MAAMC,GAAkCC,EAAAA,EAAAA,SAAQ,IAAM,CACpD,CACEC,MAAO,4DACPC,OAAQ,YACRC,KAAM,WACNC,aAAc,mBACdC,cAAe,mFAEjB,CACEJ,MAAO,0CACPC,OAAQ,YACRC,KAAM,WACNC,aAAc,mBACdC,cAAe,oFAEhB,IAGGC,GAAoBN,EAAAA,EAAAA,SAAQ,MAChCO,OAAQ,CAAEC,QAAS,GACnBC,QAAS,CACPD,QAAS,EACTE,WAAY,CAAEC,gBAAiB,OAE/B,IAEEC,GAAeZ,EAAAA,EAAAA,SAAQ,MAC3BO,OAAQ,CAAEC,QAAS,EAAGK,EAAG,IACzBJ,QAAS,CACPD,QAAS,EACTK,EAAG,EACHH,WAAY,CAAEI,SAAU,OAExB,IAEJ,OACEC,EAAAA,EAAAA,KAAA,WAASC,GAAG,iBAAiBC,UAAU,6DAA4DC,UACjGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTJ,UAAU,oBACVK,QAAS,CAAEd,QAAS,EAAGK,EAAG,IAC1BU,YAAa,CAAEf,QAAS,EAAGK,EAAG,GAC9BW,SAAU,CAAEC,MAAM,GAClBf,WAAY,CAAEI,SAAU,IAAMI,SAAA,EAE9BH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,0CAAyCC,SAAC,+BACxDH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sCACfF,EAAAA,EAAAA,KAAA,KAAGE,UAAU,wDAAuDC,SAAC,uEAKvEH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBC,UAChCH,EAAAA,EAAAA,KAACK,EAAAA,EAAOC,IAAG,CACTJ,UAAU,wCACVS,SAAUpB,EACVgB,QAAQ,SACRC,YAAY,UACZC,SAAU,CAAEC,MAAM,GAAOP,SAExBnB,EAAe4B,IAAI,CAACC,EAAMC,KACzBd,EAAAA,EAAAA,KAACK,EAAAA,EAAOC,IAAG,CAETJ,UAAU,uFACVS,SAAUd,EACVY,SAAU,CAAEC,MAAM,GAClBK,WAAY,CAAEC,MAAO,MAAOb,UAE5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qDAAoDC,SAChEc,EAAAA,cAAwCC,EAAAA,QAE3Cd,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,yCAAwCC,SAAEU,EAAK3B,SAE7DkB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0DAAyDC,SAAA,EACtEH,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAcC,SAAEc,EAAAA,cAAwCE,EAAAA,QACxEnB,EAAAA,EAAAA,KAAA,QAAAG,SAAOU,EAAK1B,aAGdiB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0DAAyDC,SAAA,EACtEH,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAcC,SAAEc,EAAAA,cAAwCG,EAAAA,QACxEhB,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,UAAQU,EAAKzB,YAGrBgB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDH,EAAAA,EAAAA,KAAA,QAAME,UAAU,cAAaC,SAAC,mBAAqB,IAAEU,EAAKxB,iBAG5De,EAAAA,EAAAA,MAAA,KACEiB,KAAMR,EAAKvB,cACXgC,OAAO,SACPC,IAAI,sBACJrB,UAAU,0IAAyIC,SAAA,CACpJ,mBAECH,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAcC,SAC3Bc,EAAAA,cAAwCO,EAAAA,iBAnC5CV,a","sources":["components/sections/Certifications.tsx"],"sourcesContent":["import React, { ComponentType, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { FaExternalLinkAlt, FaCertificate, FaCalendarAlt, FaMicrosoft } from 'react-icons/fa';\n\n// Helper function to cast the react-icons to ComponentType\nconst castIconToComponent = (icon: any): ComponentType<{}> => icon as ComponentType<{}>;\n\ninterface Certification {\n  title: string;\n  issuer: string;\n  date: string;\n  credentialId: string;\n  credentialUrl: string;\n}\n\nconst Certifications: React.FC = () => {\n  // Memoize certifications array to prevent unnecessary re-creation on each render\n  const certifications: Certification[] = useMemo(() => [\n    {\n      title: 'Develop generative AI solutions with Azure OpenAI Service',\n      issuer: 'Microsoft',\n      date: 'Aug 2024',\n      credentialId: 'A177F83307ADA295',\n      credentialUrl: 'https://learn.microsoft.com/en-us/users/antonyvule/credentials/a177f83307ada295',\n    },\n    {\n      title: 'Microsoft Certified: Azure Fundamentals',\n      issuer: 'Microsoft',\n      date: 'May 2025',\n      credentialId: '1A7E70672D53CD1E',\n      credentialUrl: 'https://learn.microsoft.com/en-us/users/antonyvule/credentials/1a7e70672d53cd1e',\n    },\n  ], []);\n\n  // Memoize animation variants to prevent recreation on every render\n  const containerVariants = useMemo(() => ({\n    hidden: { opacity: 0 },\n    visible: { \n      opacity: 1,\n      transition: { staggerChildren: 0.2 }\n    }\n  }), []);\n  \n  const itemVariants = useMemo(() => ({\n    hidden: { opacity: 0, y: 20 },\n    visible: { \n      opacity: 1, \n      y: 0,\n      transition: { duration: 0.5 } \n    }\n  }), []);\n\n  return (\n    <section id=\"certifications\" className=\"py-20 bg-gray-50 dark:bg-gray-900 relative overflow-hidden\">\n      <div className=\"container mx-auto px-4 relative z-10\">\n        <motion.div \n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"section-title text-dark dark:text-white\">Licenses & Certifications</h2>\n          <div className=\"w-24 h-1 bg-primary mx-auto my-4\"></div>\n          <p className=\"section-subtitle max-w-3xl mx-auto dark:text-gray-300\">\n            Professional certifications validating my expertise and skills\n          </p>\n        </motion.div>\n\n        <div className=\"max-w-4xl mx-auto\">\n          <motion.div\n            className=\"grid grid-cols-1 md:grid-cols-2 gap-8\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true }}\n          >\n            {certifications.map((cert, index) => (\n              <motion.div \n                key={index} \n                className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow\"\n                variants={itemVariants}\n                viewport={{ once: true }}\n                whileHover={{ scale: 1.02 }}\n              >\n                <div className=\"flex items-start\">\n                  <div className=\"mr-4 mt-1 text-primary dark:text-blue-400 text-2xl\">\n                    {React.createElement(castIconToComponent(FaMicrosoft))}\n                  </div>\n                  <div>\n                    <h3 className=\"font-bold text-lg mb-2 dark:text-white\">{cert.title}</h3>\n                    \n                    <div className=\"flex items-center mb-2 text-gray-600 dark:text-gray-300\">\n                      <span className=\"mr-2 text-sm\">{React.createElement(castIconToComponent(FaCertificate))}</span>\n                      <span>{cert.issuer}</span>\n                    </div>\n                    \n                    <div className=\"flex items-center mb-3 text-gray-600 dark:text-gray-300\">\n                      <span className=\"mr-2 text-sm\">{React.createElement(castIconToComponent(FaCalendarAlt))}</span>\n                      <span>Issued {cert.date}</span>\n                    </div>\n                    \n                    <div className=\"text-gray-700 dark:text-gray-200 mb-3\">\n                      <span className=\"font-medium\">Credential ID:</span> {cert.credentialId}\n                    </div>\n                    \n                    <a \n                      href={cert.credentialUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"inline-flex items-center text-primary dark:text-blue-400 hover:text-primary-dark dark:hover:text-blue-300 transition-colors font-medium\"\n                    >\n                      View Credential\n                      <span className=\"ml-1 text-xs\">\n                        {React.createElement(castIconToComponent(FaExternalLinkAlt))}\n                      </span>\n                    </a>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Certifications;\n"],"names":["Certifications","certifications","useMemo","title","issuer","date","credentialId","credentialUrl","containerVariants","hidden","opacity","visible","transition","staggerChildren","itemVariants","y","duration","_jsx","id","className","children","_jsxs","motion","div","initial","whileInView","viewport","once","variants","map","cert","index","whileHover","scale","React","FaMicrosoft","FaCertificate","FaCalendarAlt","href","target","rel","FaExternalLinkAlt"],"sourceRoot":""}